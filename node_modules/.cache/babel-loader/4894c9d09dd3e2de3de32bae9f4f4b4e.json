{"ast":null,"code":"var _jsxFileName = \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/WorkoutContainer/WorkoutList/WorkoutList.jsx\";\nimport React, { Component } from 'react';\nimport NewWorkout from './NewWorkout/NewWorkout';\nimport EditWorkout from './EditWorkout/EditWorkout'; //THE MAP LOADS THE FIRST WORKOUT AND AUTO SETS THE FIRST WORKOUT MAPPED AS THE ONE TO \n//EDIT BECAUSE IM USING THE COMPONENT DID MOUNT FUNCTION TO SET THE ONE TO EDIT. \n//MODALS ARE WEIRD IN THAT ITS CONSIDERED MOUNTED EVEN BEFORE YOU CLICK TO EXPAND THEM, SO IT SETS\n//THE FIRST ONE ONLY. THE REST OF THE UPDATE FUNCTIONALITY ACTUALLY WORKS... BUT I NEED TO FIGURE OUT\n// HOW TO MAKE THE MODAL SHOWS CALL ONLY HAPPEN WHEN THE CLICK TO OPEN THE MODAL HAPPENS, NOT WHEN \n//ITS MOUNTED!\n\nclass WorkoutList extends Component {\n  constructor() {\n    super();\n\n    this.toggleClass = () => {\n      console.log('hit toggle function');\n      document.getElementById('toggle-start').classList.toggle('start');\n    };\n\n    this.workouts = this.props.workouts.map(workout => {\n      // console.log(workout);\n      return React.createElement(\"div\", {\n        className: \"workout-div flex-container\",\n        key: workout._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, workout.name)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Interval One: \", workout.intervalOne), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Interval Two: \", workout.intervalTwo), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Cycles: \", workout.cycles)), React.createElement(\"div\", {\n        onClick: this.toggleClass,\n        id: \"toggle-start\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Let's Go!\")), React.createElement(EditWorkout, {\n        workout: workout,\n        modalShows: this.props.modalShows,\n        editWorkout: this.props.editWorkout,\n        handleFormChange: this.props.handleFormChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: () => {\n          this.props.deleteWorkout(workout._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Delete\"));\n    });\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(NewWorkout, {\n      buttonLabel: \"New Workout\",\n      createWorkout: this.props.createWorkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, workouts));\n  }\n\n}\n\nexport default WorkoutList;","map":{"version":3,"sources":["/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/WorkoutContainer/WorkoutList/WorkoutList.jsx"],"names":["React","Component","NewWorkout","EditWorkout","WorkoutList","constructor","toggleClass","console","log","document","getElementById","classList","toggle","workouts","props","map","workout","_id","name","intervalOne","intervalTwo","cycles","modalShows","editWorkout","handleFormChange","deleteWorkout","state","render","createWorkout"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,WAAW,GAAE;AACT;;AADS,SAObC,WAPa,GAOC,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,CAAkDC,MAAlD,CAAyD,OAAzD;AACH,KAVY;;AAAA,SAYbC,QAZa,GAYF,KAAKC,KAAL,CAAWD,QAAX,CAAoBE,GAApB,CAAyBC,OAAD,IAAY;AAC3C;AACA,aACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAA4C,QAAA,GAAG,EAAEA,OAAO,CAACC,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,OAAO,CAACE,IAAb,CADA,CADR,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkBF,OAAO,CAACG,WAA1B,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkBH,OAAO,CAACI,WAA1B,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYJ,OAAO,CAACK,MAApB,CAHA,CAJR,EASQ;AAAK,QAAA,OAAO,EAAE,KAAKf,WAAnB;AAAgC,QAAA,EAAE,EAAC,cAAnC;AAAkD,QAAA,SAAS,EAAC,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CATR,EAaQ,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEU,OAAtB;AAA+B,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWQ,UAAtD;AAAkE,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWS,WAA1F;AAAuG,QAAA,gBAAgB,EAAE,KAAKT,KAAL,CAAWU,gBAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbR,EAcQ;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,MAAK;AACrC,eAAKV,KAAL,CAAWW,aAAX,CAAyBT,OAAO,CAACC,GAAjC;AACH,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdR,CADJ;AAqBH,KAvBU,CAZE;AAET,SAAKS,KAAL,GAAa,EAAb;AAGH;;AAgCDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,aAAzB;AAAwC,MAAA,aAAa,EAAE,KAAKb,KAAL,CAAWc,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKf,QADL,CAFJ,CADJ;AASH;;AAhD+B;;AAuDpC,eAAeT,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport NewWorkout from './NewWorkout/NewWorkout';\nimport EditWorkout from './EditWorkout/EditWorkout';\n\n//THE MAP LOADS THE FIRST WORKOUT AND AUTO SETS THE FIRST WORKOUT MAPPED AS THE ONE TO \n//EDIT BECAUSE IM USING THE COMPONENT DID MOUNT FUNCTION TO SET THE ONE TO EDIT. \n\n//MODALS ARE WEIRD IN THAT ITS CONSIDERED MOUNTED EVEN BEFORE YOU CLICK TO EXPAND THEM, SO IT SETS\n//THE FIRST ONE ONLY. THE REST OF THE UPDATE FUNCTIONALITY ACTUALLY WORKS... BUT I NEED TO FIGURE OUT\n// HOW TO MAKE THE MODAL SHOWS CALL ONLY HAPPEN WHEN THE CLICK TO OPEN THE MODAL HAPPENS, NOT WHEN \n//ITS MOUNTED!\n\nclass WorkoutList extends Component {\n    constructor(){\n        super();\n        this.state = {\n\n        }\n    }\n    \n    toggleClass = () => {\n        console.log('hit toggle function');\n        document.getElementById('toggle-start').classList.toggle('start');\n    }\n\n    workouts = this.props.workouts.map((workout)=> {\n        // console.log(workout);\n        return(\n            <div className=\"workout-div flex-container\" key={workout._id}>\n                    <div>\n                    <h2>{workout.name}</h2>\n                    </div>\n                    <div>\n                    <p>Interval One: {workout.intervalOne}</p>\n                    <p>Interval Two: {workout.intervalTwo}</p>\n                    <p>Cycles: {workout.cycles}</p>\n                    </div>\n                    <div onClick={this.toggleClass} id=\"toggle-start\" className=\"\">\n                    <button>Let's Go!</button>\n                    </div>\n                    \n                    <EditWorkout workout={workout} modalShows={this.props.modalShows} editWorkout={this.props.editWorkout} handleFormChange={this.props.handleFormChange}></EditWorkout>\n                    <button className=\"delete\" onClick={() =>{\n                        this.props.deleteWorkout(workout._id)\n                    }}>Delete</button>\n                \n            </div>\n        )\n    });\n\n    render(){\n        return(\n            <div>\n                <NewWorkout buttonLabel={\"New Workout\"} createWorkout={this.props.createWorkout}/>\n                <div className=\"flex-container\">\n                    {workouts}\n                </div>\n            </div>\n            \n        )\n    }\n\n}\n\n\n\n\nexport default WorkoutList;"]},"metadata":{},"sourceType":"module"}