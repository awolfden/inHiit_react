{"ast":null,"code":"import _objectSpread from \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport WorkoutList from './WorkoutList/WorkoutList';\nimport WeatherAside from './WeatherAside/WeatherAside';\nimport WeatherForecast from './WeatherForecast/WeatherForecast';\nimport UserLogin from './UserLogin/UserLogin'; // Admin Username is 'Adam' and password is '123'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.weatherSearch = async (e, zipCode) => {\n      e.preventDefault();\n\n      try {\n        const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\\\"\".concat(zipCode, \"\\\"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ\"));\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedResponse = await response.json();\n        this.setState({\n          lat: parsedResponse.results[0].geometry.location.lat,\n          long: parsedResponse.results[0].geometry.location.lng,\n          city: parsedResponse.results[0].address_components[1].long_name\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.getWeather();\n    };\n\n    this.getWeather = async () => {\n      try {\n        const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/8a94adc7152ba66046780b53e6b95709/\".concat(this.state.lat, \",\").concat(this.state.long));\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedWeather = await response.json();\n        const forecastArray = [];\n        parsedWeather.daily.data.forEach(day => {\n          //console.log(parsedWeather.currently.icon);\n          forecastArray.push({\n            summary: day.summary,\n            precipProb: day.precipProbability,\n            precipType: day.precipType,\n            tempHigh: day.temperatureHigh,\n            tempLow: day.temperatureLow,\n            unixTime: day.time\n          });\n        });\n        this.setState({\n          weather: {\n            temp: parsedWeather.currently.temperature,\n            currentSummary: parsedWeather.currently.summary,\n            dailyOutlook: parsedWeather.daily.summary,\n            city: this.state.city,\n            icon: parsedWeather.currently.icon\n          },\n          forecast: forecastArray\n        });\n        this.setBackground();\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.setBackground = () => {\n      const currentIcon = this.state.weather.icon;\n      const iconArr = ['clear-day', 'clear-night', 'rain', 'snow', 'sleet', 'wind', 'fog', 'cloudy', 'partly-cloudy-day', 'partly-cloudy-night'];\n      iconArr.forEach(icon => {\n        if (icon === currentIcon) {\n          document.getElementsByTagName(\"body\")[0].setAttribute(\"class\", icon);\n        }\n      });\n    };\n\n    this.createUser = async (formData, e) => {\n      e.preventDefault();\n\n      try {\n        const createdUser = await fetch('http://localhost:9000/users/register', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await createdUser.json();\n        console.log(parsedResponse, \"parsed response\");\n\n        if (parsedResponse.data !== 'User name not available') {\n          this.setState({\n            isLogged: true,\n            loggedUser: parsedResponse.data.user,\n            loggedUserId: parsedResponse.data.usersDbId\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.getWorkouts();\n    };\n\n    this.loginUser = async (formData, e) => {\n      e.preventDefault();\n      console.log('loginUser function');\n\n      try {\n        const loginUser = await fetch('http://localhost:9000/users/login', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await loginUser.json();\n        console.log(parsedResponse.data.msg, 'this is parsedResponse');\n\n        if (parsedResponse.data.msg === 'login successful') {\n          this.setState({\n            isLogged: true,\n            loggedUser: parsedResponse.data.user,\n            loggedUserId: parsedResponse.data.usersDbId\n          });\n        }\n\n        this.getWorkouts();\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.logoutUser = async () => {\n      console.log('logout function');\n\n      try {\n        const logoutUser = await fetch('http://localhost:9000/users/logout', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        const parsedResponse = await logoutUser.json();\n        console.log(parsedResponse, 'this is parsed response');\n        this.setState({\n          isLogged: false,\n          loggedUser: '',\n          loggedUserId: ''\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.getWorkouts();\n    };\n\n    this.getWorkouts = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/workouts');\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedWorkouts = await response.json();\n\n        if (this.state.isLogged) {\n          const workoutArr = parsedWorkouts.data;\n          const userWorkouts = workoutArr.filter(workout => workout.user.toString() === this.state.loggedUserId.toString());\n          this.setState({\n            workouts: userWorkouts\n          });\n        } else {\n          const adminUserId = '5cddbea066a0da8bcea93c44';\n          const workoutArr = parsedWorkouts.data;\n          const userWorkouts = workoutArr.filter(workout => workout.user.toString() === adminUserId.toString());\n          this.setState({\n            workouts: userWorkouts\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.createWorkout = async (formData, e) => {\n      e.preventDefault();\n\n      try {\n        const createdWorkout = await fetch('http://localhost:9000/workouts', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await createdWorkout.json();\n        this.setState({\n          workouts: [...this.state.workouts, parsedResponse.data]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.deleteWorkout = async deletedWorkoutID => {\n      console.log(deletedWorkoutID, 'hit delete function');\n\n      try {\n        const deleteWorkout = await fetch(\"http://localhost:9000/workouts/\".concat(deletedWorkoutID), {\n          method: 'DELETE',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await deleteWorkout.json();\n        console.log(parsedResponse, 'parsed response');\n        console.log(deletedWorkoutID, \"deletedWorkoutID from before\");\n\n        if (parsedResponse.status === 200) {\n          this.setState({\n            workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.editWorkout = async e => {\n      e.preventDefault();\n      console.log(this.state.workoutToEdit._id);\n\n      try {\n        const updateWorkout = await fetch('http://localhost:9000/workouts/' + this.state.workoutToEdit._id, {\n          method: 'PUT',\n          credentials: 'include',\n          body: JSON.stringify(this.state.workoutToEdit),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await updateWorkout.json();\n        const editedWorkoutArr = this.state.workouts.map(workout => {\n          if (workout._id === this.state.workoutToEdit._id) {\n            workout = parsedResponse.data;\n          }\n\n          return workout;\n        });\n        this.setState({\n          workouts: editedWorkoutArr\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleFormChange = e => {\n      this.setState({\n        workoutToEdit: _objectSpread({}, this.state.workoutToEdit, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.modalShows = thisOne => {\n      this.setState({\n        workoutToEdit: thisOne\n      });\n    };\n\n    this.state = {\n      weather: {\n        temp: null,\n        currentSummary: '',\n        dailyOutlook: ''\n      },\n      forecast: null,\n      lat: 39.7392,\n      long: -104.9903,\n      city: 'Denver',\n      isLogged: false,\n      loggedUser: '',\n      loggedUserId: '',\n      workouts: [],\n      workoutToEdit: {\n        _id: null,\n        name: '',\n        intervalOne: 0,\n        intervalTwo: 0,\n        cycles: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n    this.getWorkouts();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app\",\n      className: \"App flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"logo\",\n      src: require('./images/inHIIT_logo.png'),\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })), React.createElement(WeatherForecast, {\n      weatherData: this.state.weather,\n      weatherSearch: this.weatherSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"workout-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(WorkoutList, {\n      isLogged: this.state.isLogged,\n      modalShows: this.modalShows,\n      editWorkout: this.editWorkout,\n      workouts: this.state.workouts,\n      createWorkout: this.createWorkout,\n      deleteWorkout: this.deleteWorkout,\n      handleFormChange: this.handleFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"aside-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, this.state.isLogged ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Welcome, \", this.state.loggedUser, \"! \") : null, this.state.isLogged ? React.createElement(\"button\", {\n      onClick: this.logoutUser,\n      className: \"newButton loginModalButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Logout\") : React.createElement(UserLogin, {\n      createUser: this.createUser,\n      loginUser: this.loginUser,\n      buttonLabel: 'Login/Register',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    })), this.state.forecast ? React.createElement(WeatherAside, {\n      forecast: this.state.forecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/App.js"],"names":["React","Component","WorkoutList","WeatherAside","WeatherForecast","UserLogin","App","constructor","weatherSearch","e","zipCode","preventDefault","response","fetch","status","Error","statusText","parsedResponse","json","setState","lat","results","geometry","location","long","lng","city","address_components","long_name","err","console","log","getWeather","state","parsedWeather","forecastArray","daily","data","forEach","day","push","summary","precipProb","precipProbability","precipType","tempHigh","temperatureHigh","tempLow","temperatureLow","unixTime","time","weather","temp","currently","temperature","currentSummary","dailyOutlook","icon","forecast","setBackground","currentIcon","iconArr","document","getElementsByTagName","setAttribute","createUser","formData","createdUser","method","credentials","body","JSON","stringify","headers","isLogged","loggedUser","user","loggedUserId","usersDbId","getWorkouts","loginUser","msg","logoutUser","parsedWorkouts","workoutArr","userWorkouts","filter","workout","toString","workouts","adminUserId","createWorkout","createdWorkout","deleteWorkout","deletedWorkoutID","_id","editWorkout","workoutToEdit","updateWorkout","editedWorkoutArr","map","handleFormChange","target","name","value","modalShows","thisOne","intervalOne","intervalTwo","cycles","componentDidMount","render","require"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport WorkoutList from './WorkoutList/WorkoutList';\nimport WeatherAside from './WeatherAside/WeatherAside';\nimport WeatherForecast from './WeatherForecast/WeatherForecast';\nimport UserLogin from './UserLogin/UserLogin';\n\n// Admin Username is 'Adam' and password is '123'\n\n\nclass App extends Component {\n    constructor(){\n      super();\n      this.state = {\n        weather: {\n            temp: null,\n            currentSummary: '',\n            dailyOutlook: '',            \n        },        \n        \n        forecast: null,\n        lat: 39.7392,\n        long: -104.9903,\n        city: 'Denver',  \n        isLogged: false,\n        loggedUser: '',\n        loggedUserId: '',\n        \n        workouts: [],\n        workoutToEdit: {\n          _id: null,\n          name: '',\n          intervalOne: 0,\n          intervalTwo: 0,\n          cycles: 0\n      },  \n      }\n      \n    }\n\n    componentDidMount(){      \n      this.getWeather();\n      this.getWorkouts();\n    }\n\n    weatherSearch = async (e, zipCode) => {\n      e.preventDefault();      \n      try{\n          const response = await fetch(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\"${zipCode}\"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ`);\n          if(response.status !== 200){\n              throw(Error(response.statusText));\n          }\n          const parsedResponse = await response.json();\n\n          this.setState({\n              lat: parsedResponse.results[0].geometry.location.lat,\n              long: parsedResponse.results[0].geometry.location.lng,\n              city: parsedResponse.results[0].address_components[1].long_name\n          })\n      } catch(err){\n          console.log(err);\n      }      \n      this.getWeather(); \n  }\n\n    getWeather = async () => {\n\n        try {\n            const response = await fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/8a94adc7152ba66046780b53e6b95709/${this.state.lat},${this.state.long}`);\n\n            if(response.status !== 200){\n                throw(Error(response.statusText));\n            }\n            const parsedWeather = await response.json();\n            const forecastArray = [];\n            parsedWeather.daily.data.forEach((day) => {\n                //console.log(parsedWeather.currently.icon);\n                forecastArray.push({\n                    summary: day.summary,\n                    precipProb: day.precipProbability,\n                    precipType: day.precipType,\n                    tempHigh: day.temperatureHigh,\n                    tempLow: day.temperatureLow,\n                    unixTime: day.time\n                    \n                })\n            })\n\n            this.setState({\n                weather: {\n                    temp: parsedWeather.currently.temperature,\n                    currentSummary: parsedWeather.currently.summary,\n                    dailyOutlook: parsedWeather.daily.summary,\n                    city: this.state.city,\n                    icon: parsedWeather.currently.icon\n                },\n                forecast: forecastArray\n            })\n\n            this.setBackground();\n\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    setBackground = () => {\n      const currentIcon = this.state.weather.icon;\n      const iconArr = ['clear-day', 'clear-night', 'rain', 'snow', 'sleet', 'wind', 'fog', 'cloudy', 'partly-cloudy-day', 'partly-cloudy-night'];\n\n      iconArr.forEach((icon) => {\n        if(icon === currentIcon){\n          document.getElementsByTagName(\"body\")[0].setAttribute(\"class\", icon);\n        }\n      })\n    }\n\n    createUser = async (formData, e) => {\n      e.preventDefault();\n\n\n      try {\n          const createdUser = await fetch('http://localhost:9000/users/register', {\n              method: 'POST',\n              credentials: 'include',\n              body: JSON.stringify(formData),\n              headers: {\n                  'Content-Type': 'application/json'\n              }\n          });\n\n          const parsedResponse = await createdUser.json();\n          console.log(parsedResponse, \"parsed response\");\n\n            if(parsedResponse.data !== 'User name not available'){\n              this.setState({\n                isLogged: true,\n                loggedUser: parsedResponse.data.user,\n                loggedUserId: parsedResponse.data.usersDbId\n            })\n          }\n\n      } catch(err) {\n          console.log(err)\n      }\n      this.getWorkouts();\n  }\n\n  loginUser = async (formData, e) => {\n      e.preventDefault();\n      console.log('loginUser function');\n\n      try {\n        const loginUser = await fetch('http://localhost:9000/users/login', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify(formData),\n        headers: {\n            'Content-Type': 'application/json',\n        }\n        })\n\n        const parsedResponse = await loginUser.json();\n        console.log(parsedResponse.data.msg, 'this is parsedResponse'); \n\n        if(parsedResponse.data.msg === 'login successful'){\n          this.setState({\n            isLogged: true,\n            loggedUser: parsedResponse.data.user,\n            loggedUserId: parsedResponse.data.usersDbId\n          })\n        }\n\n        this.getWorkouts();\n\n      } catch(err) {\n        console.log(err);\n      }\n\n  }\n\n  logoutUser = async () => {\n    console.log('logout function');\n    \n    try {\n      const logoutUser = await fetch('http://localhost:9000/users/logout', {\n        method: 'GET',\n        credentials: 'include'\n      })\n\n      const parsedResponse = await logoutUser.json();\n      console.log(parsedResponse, 'this is parsed response')\n\n      this.setState({\n        isLogged: false,\n        loggedUser: '',\n        loggedUserId: ''\n      })\n    } catch(err) {\n        console.log(err);\n    }\n    this.getWorkouts();\n  }\n\n  getWorkouts = async () => {\n\n    try {\n        const response = await fetch('http://localhost:9000/workouts');\n\n        if(response.status !== 200){\n            throw(Error(response.statusText));\n        }\n\n        const parsedWorkouts = await response.json();        \n        if(this.state.isLogged){\n            const workoutArr = parsedWorkouts.data;\n            const userWorkouts = workoutArr.filter((workout) => workout.user.toString() === this.state.loggedUserId.toString());\n            this.setState({\n                workouts: userWorkouts\n            })\n\n        } else {\n          const adminUserId = '5cddbea066a0da8bcea93c44';\n          const workoutArr = parsedWorkouts.data;\n          const userWorkouts = workoutArr.filter((workout) => workout.user.toString() === adminUserId.toString());\n          \n            this.setState({\n                workouts: userWorkouts\n            })\n            \n        }\n        \n    } catch(err) {\n        console.log(err);\n    }\n\n}\n\ncreateWorkout = async (formData, e) => {\n  e.preventDefault();\n  try {\n      const createdWorkout = await fetch('http://localhost:9000/workouts', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      });\n\n      const parsedResponse = await createdWorkout.json();\n      this.setState({workouts: [...this.state.workouts, parsedResponse.data]})\n\n  } catch(err) {\n      console.log(err)\n  }\n}\n\ndeleteWorkout = async (deletedWorkoutID) => {\n  console.log(deletedWorkoutID, 'hit delete function');\n  try{\n      const deleteWorkout = await fetch(`http://localhost:9000/workouts/${deletedWorkoutID}`, {\n          method: 'DELETE',\n          credentials: 'include',\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      });\n\n      const parsedResponse = await deleteWorkout.json();\n      console.log(parsedResponse, 'parsed response');\n      console.log(deletedWorkoutID, \"deletedWorkoutID from before\")\n      if(parsedResponse.status === 200){\n          this.setState({\n              workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n          })\n      }\n\n\n  } catch(err) {\n      console.log(err);\n  }\n\n};\n\neditWorkout = async (e) => {\n  e.preventDefault();\n  console.log(this.state.workoutToEdit._id)\n  try {\n      const updateWorkout = await fetch('http://localhost:9000/workouts/' + this.state.workoutToEdit._id, {\n          method: 'PUT',\n          credentials: 'include',\n          body: JSON.stringify(this.state.workoutToEdit),\n          headers: {\n              'Content-Type': 'application/json'\n          }\n      })\n\n      const parsedResponse = await updateWorkout.json();\n      const editedWorkoutArr = this.state.workouts.map((workout) => {\n          if(workout._id === this.state.workoutToEdit._id){\n              workout = parsedResponse.data\n          }\n          return workout\n      });\n\n      this.setState({\n          workouts: editedWorkoutArr,\n      });\n\n  } catch(err) {\n      console.log(err)\n  }        \n};\n\nhandleFormChange = (e) => {\n  this.setState({\n      workoutToEdit: {\n          ...this.state.workoutToEdit, \n          [e.target.name]: e.target.value\n      }\n  })\n}\n\nmodalShows = (thisOne) => {\n  this.setState({\n      workoutToEdit: thisOne\n  })\n}\n\n\n\n    render(){\n        return (\n          <div id=\"app\" className=\"App flex-container\">\n            <div className='logo-div'>\n            <div>\n              <img className='logo' src={require('./images/inHIIT_logo.png')} alt=\"logo\"></img>\n            </div>\n              <WeatherForecast weatherData={this.state.weather} weatherSearch={this.weatherSearch}/>              \n            </div>\n\n            \n\n            <div className=\"main-flex-container\">             \n              <div className=\"workout-container\">\n              <WorkoutList isLogged={this.state.isLogged} modalShows={this.modalShows} editWorkout={this.editWorkout} workouts={this.state.workouts} createWorkout={this.createWorkout} deleteWorkout={this.deleteWorkout} handleFormChange={this.handleFormChange}/> \n              </div>            \n              <div className=\"aside-container\">\n              <div>\n                {this.state.isLogged ? <p>Welcome, {this.state.loggedUser}! </p> : null}\n                {this.state.isLogged ? <button onClick={this.logoutUser} className=\"newButton loginModalButton\">Logout</button>\n                :\n                <UserLogin createUser={this.createUser} loginUser={this.loginUser} buttonLabel={'Login/Register'}/>}\n              </div>\n                \n                {this.state.forecast ? <WeatherAside  forecast={this.state.forecast}/> : null}\n              </div>           \n            </div>\n          </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}