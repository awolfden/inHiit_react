{"ast":null,"code":"import _objectSpread from \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/WorkoutContainer/WorkoutContainer.jsx\";\nimport React, { Component } from 'react';\nimport WorkoutList from './WorkoutList/WorkoutList';\n\nclass WorkoutContainer extends Component {\n  constructor() {\n    super();\n\n    this.createWorkout = async (formData, e) => {\n      e.preventDefault();\n\n      try {\n        const createdWorkout = await fetch('http://localhost:9000/workouts', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await createdWorkout.json();\n        this.setState({\n          workouts: [...this.state.workouts, parsedResponse.data]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.deleteWorkout = async deletedWorkoutID => {\n      console.log(deletedWorkoutID, 'hit delete function');\n\n      try {\n        const deleteWorkout = await fetch(\"http://localhost:9000/workouts/\".concat(deletedWorkoutID), {\n          method: 'DELETE',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await deleteWorkout.json();\n        console.log(parsedResponse, 'parsed response');\n        console.log(deletedWorkoutID, \"deletedWorkoutID from before\");\n\n        if (parsedResponse.status === 200) {\n          this.setState({\n            workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.editWorkout = async e => {\n      e.preventDefault();\n      console.log(this.state.workoutToEdit._id);\n\n      try {\n        const updateWorkout = await fetch('http://localhost:9000/workouts/' + this.state.workoutToEdit._id, {\n          method: 'PUT',\n          credentials: 'include',\n          body: JSON.stringify(this.state.workoutToEdit),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await updateWorkout.json();\n        const editedWorkoutArr = this.state.workouts.map(workout => {\n          if (workout._id === this.state.workoutToEdit._id) {\n            workout = parsedResponse.data;\n          }\n\n          return workout;\n        });\n        this.setState({\n          workouts: editedWorkoutArr\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleFormChange = e => {\n      this.setState({\n        workoutToEdit: _objectSpread({}, this.state.workoutToEdit, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.modalShows = thisOne => {\n      this.setState({\n        workoutToEdit: thisOne\n      });\n    };\n\n    this.state = {\n      workouts: [],\n      workoutToEdit: {\n        _id: null,\n        name: '',\n        intervalOne: 0,\n        intervalTwo: 0,\n        cycles: 0\n      },\n      modalShowing: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getWorkouts();\n  } // getWorkouts = async () => {\n  //     try {\n  //         const response = await fetch('http://localhost:9000/workouts');\n  //         if(response.status !== 200){\n  //             throw(Error(response.statusText));\n  //         }\n  //         const parsedWorkouts = await response.json();\n  //         console.log(this.props.isLogged, \"<-- this.props.isLogged\");\n  //         if(this.props.isLogged){\n  //             const userWorkouts = parsedWorkouts.data.filter((workout) => workout.user === this.props.loggedUserID);\n  //             this.setState({\n  //                 workouts: userWorkouts\n  //             })\n  //         } else {\n  //             this.setState({\n  //                 workouts: parsedWorkouts.data\n  //             })\n  //         }\n  //     } catch(err) {\n  //         console.log(err);\n  //     }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(WorkoutList, {\n      isLogged: this.props.isLogged,\n      modalShows: this.modalShows,\n      editWorkout: this.editWorkout,\n      workouts: this.state.workouts,\n      createWorkout: this.createWorkout,\n      deleteWorkout: this.deleteWorkout,\n      handleFormChange: this.handleFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WorkoutContainer;","map":{"version":3,"sources":["/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/WorkoutContainer/WorkoutContainer.jsx"],"names":["React","Component","WorkoutList","WorkoutContainer","constructor","createWorkout","formData","e","preventDefault","createdWorkout","fetch","method","credentials","body","JSON","stringify","headers","parsedResponse","json","setState","workouts","state","data","err","console","log","deleteWorkout","deletedWorkoutID","status","filter","workout","_id","editWorkout","workoutToEdit","updateWorkout","editedWorkoutArr","map","handleFormChange","target","name","value","modalShows","thisOne","intervalOne","intervalTwo","cycles","modalShowing","componentDidMount","props","getWorkouts","render","isLogged"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAGA,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACrCG,EAAAA,WAAW,GAAE;AACT;;AADS,SAuDbC,aAvDa,GAuDG,OAAOC,QAAP,EAAiBC,CAAjB,KAAuB;AACnCA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI;AACA,cAAMC,cAAc,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AACjEC,UAAAA,MAAM,EAAE,MADyD;AAEjEC,UAAAA,WAAW,EAAE,SAFoD;AAGjEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,QAAf,CAH2D;AAIjEU,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AAJwD,SAAnC,CAAlC;AASA,cAAMC,cAAc,GAAG,MAAMR,cAAc,CAACS,IAAf,EAA7B;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,QAAf,EAAyBH,cAAc,CAACK,IAAxC;AAAX,SAAd;AAEH,OAbD,CAaE,OAAMC,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAzEY;;AAAA,SA2EbG,aA3Ea,GA2EG,MAAOC,gBAAP,IAA4B;AACxCH,MAAAA,OAAO,CAACC,GAAR,CAAYE,gBAAZ,EAA8B,qBAA9B;;AACA,UAAG;AACC,cAAMD,aAAa,GAAG,MAAMhB,KAAK,0CAAmCiB,gBAAnC,GAAuD;AACpFhB,UAAAA,MAAM,EAAE,QAD4E;AAEpFC,UAAAA,WAAW,EAAE,SAFuE;AAGpFI,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AAH2E,SAAvD,CAAjC;AAQA,cAAMC,cAAc,GAAG,MAAMS,aAAa,CAACR,IAAd,EAA7B;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ,EAA4B,iBAA5B;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYE,gBAAZ,EAA8B,8BAA9B;;AACA,YAAGV,cAAc,CAACW,MAAf,KAA0B,GAA7B,EAAiC;AAC7B,eAAKT,QAAL,CAAc;AACVC,YAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAAX,CAAoBS,MAApB,CAA2BC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBJ,gBAAtD;AADA,WAAd;AAGH;AAGJ,OAnBD,CAmBE,OAAMJ,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAEJ,KApGY;;AAAA,SAsGbS,WAtGa,GAsGC,MAAOzB,CAAP,IAAa;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWY,aAAX,CAAyBF,GAArC;;AACA,UAAI;AACA,cAAMG,aAAa,GAAG,MAAMxB,KAAK,CAAC,oCAAoC,KAAKW,KAAL,CAAWY,aAAX,CAAyBF,GAA9D,EAAmE;AAChGpB,UAAAA,MAAM,EAAE,KADwF;AAEhGC,UAAAA,WAAW,EAAE,SAFmF;AAGhGC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKM,KAAL,CAAWY,aAA1B,CAH0F;AAIhGjB,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AAJuF,SAAnE,CAAjC;AASA,cAAMC,cAAc,GAAG,MAAMiB,aAAa,CAAChB,IAAd,EAA7B;AACA,cAAMiB,gBAAgB,GAAG,KAAKd,KAAL,CAAWD,QAAX,CAAoBgB,GAApB,CAAyBN,OAAD,IAAa;AAC1D,cAAGA,OAAO,CAACC,GAAR,KAAgB,KAAKV,KAAL,CAAWY,aAAX,CAAyBF,GAA5C,EAAgD;AAC5CD,YAAAA,OAAO,GAAGb,cAAc,CAACK,IAAzB;AACH;;AACD,iBAAOQ,OAAP;AACH,SALwB,CAAzB;AAOA,aAAKX,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAEe;AADA,SAAd;AAIH,OAtBD,CAsBE,OAAMZ,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAlIY;;AAAA,SAoIbc,gBApIa,GAoIO9B,CAAD,IAAO;AACtB,WAAKY,QAAL,CAAc;AACVc,QAAAA,aAAa,oBACN,KAAKZ,KAAL,CAAWY,aADL;AAET,WAAC1B,CAAC,CAAC+B,MAAF,CAASC,IAAV,GAAiBhC,CAAC,CAAC+B,MAAF,CAASE;AAFjB;AADH,OAAd;AAMH,KA3IY;;AAAA,SA6IbC,UA7Ia,GA6ICC,OAAD,IAAa;AACtB,WAAKvB,QAAL,CAAc;AACVc,QAAAA,aAAa,EAAES;AADL,OAAd;AAGH,KAjJY;;AAET,SAAKrB,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,EADD;AAETa,MAAAA,aAAa,EAAE;AACXF,QAAAA,GAAG,EAAE,IADM;AAEXQ,QAAAA,IAAI,EAAE,EAFK;AAGXI,QAAAA,WAAW,EAAE,CAHF;AAIXC,QAAAA,WAAW,EAAE,CAJF;AAKXC,QAAAA,MAAM,EAAE;AALG,OAFN;AASTC,MAAAA,YAAY,EAAE;AATL,KAAb;AAYH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,WAAX;AAEH,GApBoC,CAsBrC;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;;;AAkGAC,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAAlC;AAA4C,MAAA,UAAU,EAAE,KAAKV,UAA7D;AAAyE,MAAA,WAAW,EAAE,KAAKT,WAA3F;AAAwG,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWD,QAA7H;AAAuI,MAAA,aAAa,EAAE,KAAKf,aAA3J;AAA0K,MAAA,aAAa,EAAE,KAAKqB,aAA9L;AAA6M,MAAA,gBAAgB,EAAE,KAAKW,gBAApO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAQH;;AAhKoC;;AAoKzC,eAAelC,gBAAf","sourcesContent":["import React, {Component} from 'react';\nimport WorkoutList from './WorkoutList/WorkoutList';\n\n\nclass WorkoutContainer extends Component {\n    constructor(){\n        super();\n        this.state = {\n            workouts: [],\n            workoutToEdit: {\n                _id: null,\n                name: '',\n                intervalOne: 0,\n                intervalTwo: 0,\n                cycles: 0\n            },\n            modalShowing: false, \n            \n        }\n    }\n\n    componentDidMount(){\n        this.props.getWorkouts();\n        \n    }\n\n    // getWorkouts = async () => {\n\n    //     try {\n    //         const response = await fetch('http://localhost:9000/workouts');\n\n    //         if(response.status !== 200){\n    //             throw(Error(response.statusText));\n    //         }\n\n    //         const parsedWorkouts = await response.json();\n    //         console.log(this.props.isLogged, \"<-- this.props.isLogged\");\n    //         if(this.props.isLogged){\n    //             const userWorkouts = parsedWorkouts.data.filter((workout) => workout.user === this.props.loggedUserID);\n    //             this.setState({\n    //                 workouts: userWorkouts\n    //             })\n\n                \n    //         } else {\n    //             this.setState({\n    //                 workouts: parsedWorkouts.data\n    //             })\n                \n    //         }\n            \n\n    //     } catch(err) {\n    //         console.log(err);\n    //     }\n\n    // }\n\n\n\n    createWorkout = async (formData, e) => {\n        e.preventDefault();\n        try {\n            const createdWorkout = await fetch('http://localhost:9000/workouts', {\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(formData),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            const parsedResponse = await createdWorkout.json();\n            this.setState({workouts: [...this.state.workouts, parsedResponse.data]})\n\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    deleteWorkout = async (deletedWorkoutID) => {\n        console.log(deletedWorkoutID, 'hit delete function');\n        try{\n            const deleteWorkout = await fetch(`http://localhost:9000/workouts/${deletedWorkoutID}`, {\n                method: 'DELETE',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            const parsedResponse = await deleteWorkout.json();\n            console.log(parsedResponse, 'parsed response');\n            console.log(deletedWorkoutID, \"deletedWorkoutID from before\")\n            if(parsedResponse.status === 200){\n                this.setState({\n                    workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n                })\n            }\n\n\n        } catch(err) {\n            console.log(err);\n        }\n\n    };\n\n    editWorkout = async (e) => {\n        e.preventDefault();\n        console.log(this.state.workoutToEdit._id)\n        try {\n            const updateWorkout = await fetch('http://localhost:9000/workouts/' + this.state.workoutToEdit._id, {\n                method: 'PUT',\n                credentials: 'include',\n                body: JSON.stringify(this.state.workoutToEdit),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            const parsedResponse = await updateWorkout.json();\n            const editedWorkoutArr = this.state.workouts.map((workout) => {\n                if(workout._id === this.state.workoutToEdit._id){\n                    workout = parsedResponse.data\n                }\n                return workout\n            });\n\n            this.setState({\n                workouts: editedWorkoutArr,\n            });\n\n        } catch(err) {\n            console.log(err)\n        }        \n    };\n\n    handleFormChange = (e) => {\n        this.setState({\n            workoutToEdit: {\n                ...this.state.workoutToEdit, \n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    modalShows = (thisOne) => {\n        this.setState({\n            workoutToEdit: thisOne\n        })\n    }\n\n\n\n    render(){\n\n        return(\n            <div className=\"flex-container\">\n                \n                <WorkoutList isLogged={this.props.isLogged} modalShows={this.modalShows} editWorkout={this.editWorkout} workouts={this.state.workouts} createWorkout={this.createWorkout} deleteWorkout={this.deleteWorkout} handleFormChange={this.handleFormChange}/> \n            </div>\n            \n        )\n        \n    }\n}\n\n\nexport default WorkoutContainer;"]},"metadata":{},"sourceType":"module"}