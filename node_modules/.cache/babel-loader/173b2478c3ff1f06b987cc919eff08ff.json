{"ast":null,"code":"import _objectSpread from \"/Users/adamwolfman/sei-june-bugs/projects/java_project/inHiit_Java/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/adamwolfman/sei-june-bugs/projects/java_project/inHiit_Java/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport WorkoutList from './WorkoutList/WorkoutList';\nimport WeatherAside from './WeatherAside/WeatherAside';\nimport WeatherForecast from './WeatherForecast/WeatherForecast';\nimport UserLogin from './UserLogin/UserLogin'; // Admin Username is 'Adam' and password is '123'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.weatherSearch = async (e, zipCode) => {\n      e.preventDefault();\n\n      try {\n        const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\\\"\".concat(zipCode, \"\\\"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ\"));\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedResponse = await response.json();\n        this.setState({\n          lat: parsedResponse.results[0].geometry.location.lat,\n          long: parsedResponse.results[0].geometry.location.lng,\n          city: parsedResponse.results[0].address_components[1].long_name\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.getWeather();\n    };\n\n    this.getWeather = async () => {\n      try {\n        const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/8a94adc7152ba66046780b53e6b95709/\".concat(this.state.lat, \",\").concat(this.state.long));\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedWeather = await response.json();\n        const forecastArray = [];\n        parsedWeather.daily.data.forEach(day => {\n          forecastArray.push({\n            summary: day.summary,\n            precipProb: day.precipProbability,\n            precipType: day.precipType,\n            tempHigh: day.temperatureHigh,\n            tempLow: day.temperatureLow,\n            unixTime: day.time\n          });\n        });\n        this.setState({\n          weather: {\n            temp: parsedWeather.currently.temperature,\n            currentSummary: parsedWeather.currently.summary,\n            dailyOutlook: parsedWeather.daily.summary,\n            city: this.state.city,\n            icon: parsedWeather.currently.icon\n          },\n          forecast: forecastArray\n        });\n        this.setBackground();\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.setBackground = () => {\n      const currentIcon = this.state.weather.icon;\n      const iconArr = ['clear-day', 'clear-night', 'rain', 'snow', 'sleet', 'wind', 'fog', 'cloudy', 'partly-cloudy-day', 'partly-cloudy-night'];\n      iconArr.forEach(icon => {\n        if (icon === currentIcon) {\n          document.getElementsByTagName('body')[0].setAttribute('class', icon);\n        }\n      });\n    };\n\n    this.createUser = async (formData, e) => {\n      e.preventDefault();\n\n      try {\n        const createdUser = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/users/register\"), {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await createdUser.json();\n\n        if (parsedResponse.data !== 'User name not available') {\n          this.setState({\n            isLogged: true,\n            loggedUser: parsedResponse.data.user,\n            loggedUserId: parsedResponse.data.usersDbId\n          });\n        } else {\n          this.setState({\n            logFailMsg: 'User name not available'\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.getWorkouts();\n    };\n\n    this.loginUser = async (formData, e) => {\n      e.preventDefault();\n\n      try {\n        const loginUser = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/users/login\"), {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await loginUser.json();\n\n        if (parsedResponse.data.msg === 'login successful') {\n          this.setState({\n            isLogged: true,\n            loggedUser: parsedResponse.data.user,\n            loggedUserId: parsedResponse.data.usersDbId,\n            logFailMsg: ''\n          });\n          this.getWorkouts();\n        } else {\n          this.setState({\n            logFailMsg: 'Username or Password Incorrect'\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.logoutUser = async () => {\n      try {\n        const logoutUser = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/users/logout\"), {\n          method: 'GET',\n          credentials: 'include'\n        });\n        const parsedResponse = await logoutUser.json();\n        console.log(parsedResponse, 'this is parsed response');\n        this.setState({\n          isLogged: false,\n          loggedUser: '',\n          loggedUserId: ''\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.getWorkouts();\n    };\n\n    this.getWorkouts = async () => {\n      try {\n        const response = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/workouts\"));\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedWorkouts = await response.json();\n\n        if (this.state.isLogged) {\n          const workoutArr = parsedWorkouts.data;\n          const userWorkouts = workoutArr.filter(workout => workout.user.toString() === this.state.loggedUserId.toString());\n          this.setState({\n            workouts: userWorkouts\n          });\n        } else {\n          const adminUserId = '5cdef3b17742540017fb92dd';\n          const workoutArr = parsedWorkouts.data;\n          const userWorkouts = workoutArr.filter(workout => workout.user.toString() === adminUserId.toString());\n          this.setState({\n            workouts: userWorkouts\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.createWorkout = async (formData, e) => {\n      e.preventDefault();\n\n      try {\n        const createdWorkout = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/workouts\"), {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await createdWorkout.json();\n        this.setState({\n          workouts: [...this.state.workouts, parsedResponse.data]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.deleteWorkout = async deletedWorkoutID => {\n      try {\n        const deleteWorkout = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/workouts/\").concat(deletedWorkoutID), {\n          method: 'DELETE',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await deleteWorkout.json();\n\n        if (parsedResponse.status === 200) {\n          this.setState({\n            workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.editWorkout = async e => {\n      e.preventDefault();\n\n      try {\n        const updateWorkout = await fetch(\"\".concat(process.env.REACT_APP_BACKEND_ADDRESS, \"/workouts/\") + this.state.workoutToEdit._id, {\n          method: 'PUT',\n          credentials: 'include',\n          body: JSON.stringify(this.state.workoutToEdit),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await updateWorkout.json();\n        const editedWorkoutArr = this.state.workouts.map(workout => {\n          if (workout._id === this.state.workoutToEdit._id) {\n            workout = parsedResponse.data;\n          }\n\n          return workout;\n        });\n        this.setState({\n          workouts: editedWorkoutArr\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleFormChange = e => {\n      this.setState({\n        workoutToEdit: _objectSpread({}, this.state.workoutToEdit, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.modalShows = thisOne => {\n      this.setState({\n        workoutToEdit: thisOne\n      });\n    };\n\n    this.state = {\n      weather: {\n        temp: null,\n        currentSummary: '',\n        dailyOutlook: ''\n      },\n      forecast: null,\n      lat: 39.7392,\n      long: -104.9903,\n      city: 'Denver',\n      isLogged: false,\n      loggedUser: '',\n      loggedUserId: '',\n      logFailMsg: '',\n      workouts: [],\n      workoutToEdit: {\n        _id: null,\n        name: '',\n        intervalOne: 0,\n        intervalTwo: 0,\n        cycles: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n    this.getWorkouts();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app\",\n      className: \"App flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"logo\",\n      src: require('./images/inHIIT_logo.png'),\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })), React.createElement(WeatherForecast, {\n      weatherData: this.state.weather,\n      weatherSearch: this.weatherSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"workout-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(WorkoutList, {\n      isLogged: this.state.isLogged,\n      modalShows: this.modalShows,\n      editWorkout: this.editWorkout,\n      workouts: this.state.workouts,\n      createWorkout: this.createWorkout,\n      deleteWorkout: this.deleteWorkout,\n      handleFormChange: this.handleFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"aside-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"failure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, this.state.logFailMsg), this.state.isLogged ? React.createElement(\"p\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Welcome, \", this.state.loggedUser, \"! \") : null, this.state.isLogged ? React.createElement(\"button\", {\n      onClick: this.logoutUser,\n      className: \"newButton loginModalButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Logout\") : React.createElement(UserLogin, {\n      createUser: this.createUser,\n      loginUser: this.loginUser,\n      buttonLabel: 'Login/Register',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    })), this.state.forecast ? React.createElement(WeatherAside, {\n      forecast: this.state.forecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adamwolfman/sei-june-bugs/projects/java_project/inHiit_Java/client/src/App.js"],"names":["React","Component","WorkoutList","WeatherAside","WeatherForecast","UserLogin","App","constructor","weatherSearch","e","zipCode","preventDefault","response","fetch","status","Error","statusText","parsedResponse","json","setState","lat","results","geometry","location","long","lng","city","address_components","long_name","err","console","log","getWeather","state","parsedWeather","forecastArray","daily","data","forEach","day","push","summary","precipProb","precipProbability","precipType","tempHigh","temperatureHigh","tempLow","temperatureLow","unixTime","time","weather","temp","currently","temperature","currentSummary","dailyOutlook","icon","forecast","setBackground","currentIcon","iconArr","document","getElementsByTagName","setAttribute","createUser","formData","createdUser","process","env","REACT_APP_BACKEND_ADDRESS","method","credentials","body","JSON","stringify","headers","isLogged","loggedUser","user","loggedUserId","usersDbId","logFailMsg","getWorkouts","loginUser","msg","logoutUser","parsedWorkouts","workoutArr","userWorkouts","filter","workout","toString","workouts","adminUserId","createWorkout","createdWorkout","deleteWorkout","deletedWorkoutID","_id","editWorkout","updateWorkout","workoutToEdit","editedWorkoutArr","map","handleFormChange","target","name","value","modalShows","thisOne","intervalOne","intervalTwo","cycles","componentDidMount","render","require"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport WorkoutList from './WorkoutList/WorkoutList';\nimport WeatherAside from './WeatherAside/WeatherAside';\nimport WeatherForecast from './WeatherForecast/WeatherForecast';\nimport UserLogin from './UserLogin/UserLogin';\n\n// Admin Username is 'Adam' and password is '123'\n\n\nclass App extends Component {\n    constructor(){\n      super();\n      this.state = {\n        weather: {\n            temp: null,\n            currentSummary: '',\n            dailyOutlook: '',            \n        },        \n        \n        forecast: null,\n        lat: 39.7392,\n        long: -104.9903,\n        city: 'Denver',  \n        isLogged: false,\n        loggedUser: '',\n        loggedUserId: '',\n        logFailMsg: '',\n        \n        workouts: [],\n        workoutToEdit: {\n          _id: null,\n          name: '',\n          intervalOne: 0,\n          intervalTwo: 0,\n          cycles: 0\n      },  \n      }\n      \n    }\n\n    componentDidMount(){      \n      this.getWeather();\n      this.getWorkouts();\n    }\n\n    weatherSearch = async (e, zipCode) => {\n      e.preventDefault();      \n      try{\n          const response = await fetch(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\"${zipCode}\"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ`);\n          if(response.status !== 200){\n              throw(Error(response.statusText));\n          }\n          const parsedResponse = await response.json();\n\n          this.setState({\n              lat: parsedResponse.results[0].geometry.location.lat,\n              long: parsedResponse.results[0].geometry.location.lng,\n              city: parsedResponse.results[0].address_components[1].long_name\n          })\n      } catch(err){\n          console.log(err);\n      }      \n      this.getWeather(); \n  }\n\n    getWeather = async () => {\n\n        try {\n            const response = await fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/8a94adc7152ba66046780b53e6b95709/${this.state.lat},${this.state.long}`);\n\n            if(response.status !== 200){\n                throw(Error(response.statusText));\n            }\n            const parsedWeather = await response.json();\n            const forecastArray = [];\n            parsedWeather.daily.data.forEach((day) => {\n                forecastArray.push({\n                    summary: day.summary,\n                    precipProb: day.precipProbability,\n                    precipType: day.precipType,\n                    tempHigh: day.temperatureHigh,\n                    tempLow: day.temperatureLow,\n                    unixTime: day.time                    \n                })\n            })\n\n            this.setState({\n                weather: {\n                    temp: parsedWeather.currently.temperature,\n                    currentSummary: parsedWeather.currently.summary,\n                    dailyOutlook: parsedWeather.daily.summary,\n                    city: this.state.city,\n                    icon: parsedWeather.currently.icon\n                },\n                forecast: forecastArray\n            })\n\n            this.setBackground();\n\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    setBackground = () => {\n      const currentIcon = this.state.weather.icon;\n      const iconArr = ['clear-day', 'clear-night', 'rain', 'snow', 'sleet', 'wind', 'fog', 'cloudy', 'partly-cloudy-day', 'partly-cloudy-night'];\n\n      iconArr.forEach((icon) => {\n        if(icon === currentIcon){\n          document.getElementsByTagName('body')[0].setAttribute('class', icon);\n        }\n      })\n    }\n\n    createUser = async (formData, e) => {\n      e.preventDefault();\n\n\n      try {\n          const createdUser = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/users/register`, {\n              method: 'POST',\n              credentials: 'include',\n              body: JSON.stringify(formData),\n              headers: {\n                  'Content-Type': 'application/json'\n              }\n          });\n\n          const parsedResponse = await createdUser.json();\n            if(parsedResponse.data !== 'User name not available'){\n              this.setState({\n                isLogged: true,\n                loggedUser: parsedResponse.data.user,\n                loggedUserId: parsedResponse.data.usersDbId,\n            })\n          } else {\n            this.setState({\n              logFailMsg: 'User name not available'\n            })\n          }\n      } catch(err) {\n          console.log(err)\n      }\n      this.getWorkouts();\n  }\n\n  loginUser = async (formData, e) => {\n      e.preventDefault();\n      try {\n        const loginUser = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/users/login`, {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify(formData),\n        headers: {\n            'Content-Type': 'application/json',\n        }\n        })\n        const parsedResponse = await loginUser.json();\n        if(parsedResponse.data.msg === 'login successful'){\n          this.setState({\n            isLogged: true,\n            loggedUser: parsedResponse.data.user,\n            loggedUserId: parsedResponse.data.usersDbId,\n            logFailMsg: '',\n          })\n          this.getWorkouts();\n        } else {\n          this.setState({\n            logFailMsg: 'Username or Password Incorrect'\n          })\n        }\n      } catch(err) {\n        console.log(err);\n      }\n\n  }\n\n  logoutUser = async () => {\n    try {\n      const logoutUser = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/users/logout`, {\n        method: 'GET',\n        credentials: 'include'\n      })\n\n      const parsedResponse = await logoutUser.json();\n      console.log(parsedResponse, 'this is parsed response')\n\n      this.setState({\n        isLogged: false,\n        loggedUser: '',\n        loggedUserId: ''\n      })\n    } catch(err) {\n        console.log(err);\n    }\n    this.getWorkouts();\n  }\n\n  getWorkouts = async () => {\n\n    try {\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/workouts`);\n\n        if(response.status !== 200){\n            throw(Error(response.statusText));\n        }\n\n        const parsedWorkouts = await response.json();        \n        if(this.state.isLogged){\n            const workoutArr = parsedWorkouts.data;\n            const userWorkouts = workoutArr.filter((workout) => workout.user.toString() === this.state.loggedUserId.toString());\n            this.setState({\n                workouts: userWorkouts\n            })\n\n        } else {\n          const adminUserId = '5cdef3b17742540017fb92dd';\n          const workoutArr = parsedWorkouts.data;\n          const userWorkouts = workoutArr.filter((workout) => workout.user.toString() === adminUserId.toString());\n          \n            this.setState({\n                workouts: userWorkouts\n            })   \n        }\n        \n    } catch(err) {\n        console.log(err);\n    }\n\n}\n\n  createWorkout = async (formData, e) => {\n    e.preventDefault();\n    try {\n        const createdWorkout = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/workouts`, {\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify(formData),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        const parsedResponse = await createdWorkout.json();\n        this.setState({workouts: [...this.state.workouts, parsedResponse.data]})\n\n    } catch(err) {\n        console.log(err)\n    }\n  }\n\n  deleteWorkout = async (deletedWorkoutID) => {\n    try{\n        const deleteWorkout = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/workouts/${deletedWorkoutID}`, {\n            method: 'DELETE',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        const parsedResponse = await deleteWorkout.json();\n        if(parsedResponse.status === 200){\n            this.setState({\n                workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n            })\n        }\n\n\n    } catch(err) {\n        console.log(err);\n    }\n\n  };\n\n  editWorkout = async (e) => {\n    e.preventDefault();\n    try {\n        const updateWorkout = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/workouts/` + this.state.workoutToEdit._id, {\n            method: 'PUT',\n            credentials: 'include',\n            body: JSON.stringify(this.state.workoutToEdit),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        const parsedResponse = await updateWorkout.json();\n        const editedWorkoutArr = this.state.workouts.map((workout) => {\n            if(workout._id === this.state.workoutToEdit._id){\n                workout = parsedResponse.data\n            }\n            return workout\n        });\n\n        this.setState({\n            workouts: editedWorkoutArr,\n        });\n\n    } catch(err) {\n        console.log(err)\n    }        \n  };\n\n  handleFormChange = (e) => {\n    this.setState({\n        workoutToEdit: {\n            ...this.state.workoutToEdit, \n            [e.target.name]: e.target.value\n        }\n    })\n  }\n\n  modalShows = (thisOne) => {\n    this.setState({\n        workoutToEdit: thisOne\n    })\n  }\n\n\n\n  render(){\n      return (\n        <div id='app' className='App flex-container'>\n          <div className='logo-div'>\n          <div>\n            <img className='logo' src={require('./images/inHIIT_logo.png')} alt='logo'></img>\n          </div>\n            <WeatherForecast weatherData={this.state.weather} weatherSearch={this.weatherSearch}/>              \n          </div>\n\n          \n\n          <div className='main-flex-container'>             \n            <div className='workout-container'>\n            <WorkoutList isLogged={this.state.isLogged} modalShows={this.modalShows} editWorkout={this.editWorkout} workouts={this.state.workouts} createWorkout={this.createWorkout} deleteWorkout={this.deleteWorkout} handleFormChange={this.handleFormChange}/> \n            </div>            \n            <div className='aside-container'>\n            <div>\n              <p className='failure'>{this.state.logFailMsg}</p>\n              {this.state.isLogged ? <p className='login'>Welcome, {this.state.loggedUser}! </p> : null}\n              {this.state.isLogged ? <button onClick={this.logoutUser} className='newButton loginModalButton'>Logout</button>\n              :\n              <UserLogin createUser={this.createUser} loginUser={this.loginUser} buttonLabel={'Login/Register'}/>}\n            </div>\n              \n              {this.state.forecast ? <WeatherAside  forecast={this.state.forecast}/> : null}\n            </div>           \n          </div>\n        </div>\n      )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}