{"ast":null,"code":"var _jsxFileName = \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport WorkoutContainer from './WorkoutContainer/WorkoutContainer';\nimport WeatherAside from './WeatherAside/WeatherAside';\nimport WeatherForecast from './WeatherForecast/WeatherForecast';\nimport UserLogin from './UserLogin/UserLogin';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.weatherSearch = async (e, zipCode) => {\n      e.preventDefault();\n\n      try {\n        const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\\\"\".concat(zipCode, \"\\\"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ\"));\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedResponse = await response.json();\n        this.setState({\n          lat: parsedResponse.results[0].geometry.location.lat,\n          long: parsedResponse.results[0].geometry.location.lng,\n          city: parsedResponse.results[0].address_components[1].long_name\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.getWeather();\n    };\n\n    this.getWeather = async () => {\n      try {\n        const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/8a94adc7152ba66046780b53e6b95709/\".concat(this.state.lat, \",\").concat(this.state.long));\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedWeather = await response.json();\n        const forecastArray = [];\n        parsedWeather.daily.data.forEach(day => {\n          //console.log(parsedWeather.currently.icon);\n          forecastArray.push({\n            summary: day.summary,\n            precipProb: day.precipProbability,\n            precipType: day.precipType,\n            tempHigh: day.temperatureHigh,\n            tempLow: day.temperatureLow,\n            unixTime: day.time\n          });\n        });\n        this.setState({\n          weather: {\n            temp: parsedWeather.currently.temperature,\n            currentSummary: parsedWeather.currently.summary,\n            dailyOutlook: parsedWeather.daily.summary,\n            city: this.state.city,\n            icon: parsedWeather.currently.icon\n          },\n          forecast: forecastArray\n        });\n        this.setBackground();\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.setBackground = () => {\n      const currentIcon = this.state.weather.icon;\n      const iconArr = ['clear-day', 'clear-night', 'rain', 'snow', 'sleet', 'wind', 'fog', 'cloudy', 'partly-cloudy-day', 'partly-cloudy-night'];\n      iconArr.forEach(icon => {\n        if (icon === currentIcon) {\n          document.getElementsByTagName(\"body\")[0].setAttribute(\"class\", icon);\n        }\n      });\n    };\n\n    this.createUser = async (formData, e) => {\n      e.preventDefault();\n      console.log(formData);\n\n      try {\n        const createdUser = await fetch('http://localhost:9000/users', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await createdUser.json();\n        console.log(parsedResponse, \"parsed response\");\n        this.setState({\n          isLogged: true\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.loginUser = (formData, e) => {\n      e.preventDefault();\n      console.log('loginUser function');\n    };\n\n    this.logoutUser = async () => {\n      console.log('logout function');\n\n      try {\n        const logoutUser = await fetch('http://localhost:9000/users/logout', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        this.setState({\n          isLogged: false\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      weather: {\n        temp: null,\n        currentSummary: '',\n        dailyOutlook: ''\n      },\n      forecast: null,\n      lat: 39.7392,\n      long: -104.9903,\n      city: 'Denver',\n      isLogged: false\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app\",\n      className: \"App flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"logo\",\n      src: require('./images/inHIIT_logo.png'),\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(WeatherForecast, {\n      weatherData: this.state.weather,\n      weatherSearch: this.weatherSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(UserLogin, {\n      createUser: this.createUser,\n      loginUser: this.loginUser,\n      buttonLabel: 'Login/Register',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.logoutUser,\n      className: \"newButton loginModalButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"div\", {\n      className: \"main-flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"workout-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(WorkoutContainer, {\n      setForcast: this.setForecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"aside-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.forecast ? React.createElement(WeatherAside, {\n      forecast: this.state.forecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/App.js"],"names":["React","Component","WorkoutContainer","WeatherAside","WeatherForecast","UserLogin","App","constructor","weatherSearch","e","zipCode","preventDefault","response","fetch","status","Error","statusText","parsedResponse","json","setState","lat","results","geometry","location","long","lng","city","address_components","long_name","err","console","log","getWeather","state","parsedWeather","forecastArray","daily","data","forEach","day","push","summary","precipProb","precipProbability","precipType","tempHigh","temperatureHigh","tempLow","temperatureLow","unixTime","time","weather","temp","currently","temperature","currentSummary","dailyOutlook","icon","forecast","setBackground","currentIcon","iconArr","document","getElementsByTagName","setAttribute","createUser","formData","createdUser","method","credentials","body","JSON","stringify","headers","isLogged","loginUser","logoutUser","componentDidMount","render","require","setForecast"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport WorkoutContainer from './WorkoutContainer/WorkoutContainer';\nimport WeatherAside from './WeatherAside/WeatherAside';\nimport WeatherForecast from './WeatherForecast/WeatherForecast';\nimport UserLogin from './UserLogin/UserLogin';\n\nclass App extends Component {\n    constructor(){\n      super();\n      this.state = {\n        weather: {\n            temp: null,\n            currentSummary: '',\n            dailyOutlook: '',            \n        },        \n        forecast: null,\n        lat: 39.7392,\n        long: -104.9903,\n        city: 'Denver',  \n        isLogged: false      \n      }\n    }\n\n    componentDidMount(){      \n      this.getWeather();\n    }\n\n    weatherSearch = async (e, zipCode) => {\n      e.preventDefault();      \n      try{\n          const response = await fetch(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\"${zipCode}\"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ`);\n          if(response.status !== 200){\n              throw(Error(response.statusText));\n          }\n          const parsedResponse = await response.json();\n\n          this.setState({\n              lat: parsedResponse.results[0].geometry.location.lat,\n              long: parsedResponse.results[0].geometry.location.lng,\n              city: parsedResponse.results[0].address_components[1].long_name\n          })\n      } catch(err){\n          console.log(err);\n      }      \n      this.getWeather(); \n  }\n\n    getWeather = async () => {\n\n        try {\n            const response = await fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/8a94adc7152ba66046780b53e6b95709/${this.state.lat},${this.state.long}`);\n\n            if(response.status !== 200){\n                throw(Error(response.statusText));\n            }\n            const parsedWeather = await response.json();\n            const forecastArray = [];\n            parsedWeather.daily.data.forEach((day) => {\n                //console.log(parsedWeather.currently.icon);\n                forecastArray.push({\n                    summary: day.summary,\n                    precipProb: day.precipProbability,\n                    precipType: day.precipType,\n                    tempHigh: day.temperatureHigh,\n                    tempLow: day.temperatureLow,\n                    unixTime: day.time\n                    \n                })\n            })\n\n            this.setState({\n                weather: {\n                    temp: parsedWeather.currently.temperature,\n                    currentSummary: parsedWeather.currently.summary,\n                    dailyOutlook: parsedWeather.daily.summary,\n                    city: this.state.city,\n                    icon: parsedWeather.currently.icon\n                },\n                forecast: forecastArray\n            })\n\n            this.setBackground();\n\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    setBackground = () => {\n      const currentIcon = this.state.weather.icon;\n      const iconArr = ['clear-day', 'clear-night', 'rain', 'snow', 'sleet', 'wind', 'fog', 'cloudy', 'partly-cloudy-day', 'partly-cloudy-night'];\n\n      iconArr.forEach((icon) => {\n        if(icon === currentIcon){\n          document.getElementsByTagName(\"body\")[0].setAttribute(\"class\", icon);\n        }\n      })\n    }\n\n    createUser = async (formData, e) => {\n      e.preventDefault();\n      console.log(formData);\n\n      try {\n          const createdUser = await fetch('http://localhost:9000/users', {\n              method: 'POST',\n              credentials: 'include',\n              body: JSON.stringify(formData),\n              headers: {\n                  'Content-Type': 'application/json'\n              }\n          });\n\n          const parsedResponse = await createdUser.json();\n          console.log(parsedResponse, \"parsed response\");\n          this.setState({\n              isLogged: true\n          })\n\n      } catch(err) {\n          console.log(err)\n      }\n  \n  }\n\n  loginUser = (formData, e) => {\n      e.preventDefault();\n      console.log('loginUser function');\n  \n  }\n\n  logoutUser = async () => {\n    console.log('logout function');\n    \n    try {\n      const logoutUser = await fetch('http://localhost:9000/users/logout', {\n        method: 'GET',\n        credentials: 'include',\n      })\n\n      this.setState({\n        isLogged: false\n      })\n    } catch(err) {\n        console.log(err);\n    }\n\n  }\n\n    render(){\n        return (\n          <div id=\"app\" className=\"App flex-container\">\n            <div className='logo-div'>\n            <div>\n              <img className='logo' src={require('./images/inHIIT_logo.png')} alt=\"logo\"></img>\n            </div>\n              \n              <WeatherForecast weatherData={this.state.weather} weatherSearch={this.weatherSearch}/>\n              \n            </div>\n            <UserLogin createUser={this.createUser} loginUser={this.loginUser} buttonLabel={'Login/Register'}/>\n            <button onClick={this.logoutUser} className=\"newButton loginModalButton\">Logout</button>\n            \n            <div className=\"main-flex-container\">             \n              <div className=\"workout-container\">\n                <WorkoutContainer setForcast={this.setForecast}/>\n              </div>            \n              <div className=\"aside-container\">\n                {this.state.forecast ? <WeatherAside  forecast={this.state.forecast}/> : null}\n              </div>           \n            </div>\n          </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}