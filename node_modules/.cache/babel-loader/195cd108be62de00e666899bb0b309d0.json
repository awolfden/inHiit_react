{"ast":null,"code":"import _objectSpread from \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/WorkoutContainer/WorkoutContainer.jsx\";\nimport React, { Component } from 'react';\nimport WorkoutList from './WorkoutList/WorkoutList';\nimport WeatherForecast from './WeatherForecast/WeatherForecast';\n\nclass WorkoutContainer extends Component {\n  constructor() {\n    super();\n\n    this.getWorkouts = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/workouts');\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedWorkouts = await response.json();\n        this.setState({\n          workouts: parsedWorkouts.data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.weatherSearch = async (e, zipCode) => {\n      e.preventDefault();\n      console.log(zipCode);\n\n      try {\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\"80223\"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ');\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedResponse = await response.json();\n        console.log(parsedResponse, \"<-- parsed response zip data\");\n        this.setState({\n          lat: parsedResponse.results.geometry.location.lat,\n          long: parsedResponse.results.geometry.location.lng\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.getWeather();\n    };\n\n    this.getWeather = async () => {\n      try {\n        const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/8a94adc7152ba66046780b53e6b95709/39.7392,-104.9903\");\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedWeather = await response.json();\n        console.log(parsedWeather, \"<-- parsedWeather\");\n        this.setState({\n          weather: {\n            temp: parsedWeather.currently.temperature,\n            currentSummary: parsedWeather.currently.summary,\n            dailyOutlook: parsedWeather.daily.summary\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.createWorkout = async (formData, e) => {\n      e.preventDefault();\n\n      try {\n        const createdWorkout = await fetch('http://localhost:9000/workouts', {\n          method: 'POST',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await createdWorkout.json();\n        this.setState({\n          workouts: [...this.state.workouts, parsedResponse.data]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.deleteWorkout = async deletedWorkoutID => {\n      console.log(deletedWorkoutID, 'hit delete function');\n\n      try {\n        const deleteWorkout = await fetch(\"http://localhost:9000/workouts/\".concat(deletedWorkoutID), {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await deleteWorkout.json();\n        console.log(parsedResponse, 'parsed response');\n        console.log(deletedWorkoutID, \"deletedWorkoutID from before\");\n\n        if (parsedResponse.status === 200) {\n          this.setState({\n            workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleFormChange = e => {\n      this.setState({\n        workoutToEdit: _objectSpread({}, this.state.workoutToEdit, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.modalShows = thisOne => {\n      this.setState({\n        workoutToEdit: thisOne\n      });\n    };\n\n    this.editWorkout = async e => {\n      e.preventDefault();\n      console.log(this.state.workoutToEdit._id);\n\n      try {\n        const updateWorkout = await fetch('http://localhost:9000/workouts/' + this.state.workoutToEdit._id, {\n          method: 'PUT',\n          body: JSON.stringify(this.state.workoutToEdit),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await updateWorkout.json();\n        const editedWorkoutArr = this.state.workouts.map(workout => {\n          if (workout._id === this.state.workoutToEdit._id) {\n            workout = parsedResponse.data;\n          }\n\n          return workout;\n        });\n        this.setState({\n          workouts: editedWorkoutArr\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      workouts: [],\n      workoutToEdit: {\n        _id: null,\n        name: '',\n        intervalOne: 0,\n        intervalTwo: 0,\n        cycles: 0\n      },\n      modalShowing: false,\n      weather: {\n        temp: null,\n        // currently.temperature\n        currentSummary: '',\n        // currently.summary\n        dailyOutlook: '' // daily.summary\n\n      },\n      lat: null,\n      long: null\n    };\n  }\n\n  componentDidMount() {\n    this.getWorkouts();\n    this.getWeather();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"workout-container flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(WeatherForecast, {\n      weatherData: this.state.weather,\n      weatherSearch: this.weatherSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(WorkoutList, {\n      modalShows: this.modalShows,\n      editWorkout: this.editWorkout,\n      workouts: this.state.workouts,\n      createWorkout: this.createWorkout,\n      deleteWorkout: this.deleteWorkout,\n      handleFormChange: this.handleFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WorkoutContainer;","map":{"version":3,"sources":["/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/WorkoutContainer/WorkoutContainer.jsx"],"names":["React","Component","WorkoutList","WeatherForecast","WorkoutContainer","constructor","getWorkouts","response","fetch","status","Error","statusText","parsedWorkouts","json","setState","workouts","data","err","console","log","weatherSearch","e","zipCode","preventDefault","parsedResponse","lat","results","geometry","location","long","lng","getWeather","parsedWeather","weather","temp","currently","temperature","currentSummary","summary","dailyOutlook","daily","createWorkout","formData","createdWorkout","method","body","JSON","stringify","headers","state","deleteWorkout","deletedWorkoutID","filter","workout","_id","handleFormChange","workoutToEdit","target","name","value","modalShows","thisOne","editWorkout","updateWorkout","editedWorkoutArr","map","intervalOne","intervalTwo","cycles","modalShowing","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport WorkoutList from './WorkoutList/WorkoutList';\nimport WeatherForecast from './WeatherForecast/WeatherForecast';\n\nclass WorkoutContainer extends Component {\n    constructor(){\n        super();\n        this.state = {\n            workouts: [],\n            workoutToEdit: {\n                _id: null,\n                name: '',\n                intervalOne: 0,\n                intervalTwo: 0,\n                cycles: 0\n            },\n            modalShowing: false, \n            weather: {\n                temp: null, // currently.temperature\n                currentSummary: '', // currently.summary\n                dailyOutlook: '' // daily.summary\n\n            },\n            lat: null,\n            long: null\n        }\n    }\n\n    componentDidMount(){\n        this.getWorkouts();\n        this.getWeather();\n    }\n\n    getWorkouts = async () => {\n\n        try {\n            const response = await fetch('http://localhost:9000/workouts');\n\n            if(response.status !== 200){\n                throw(Error(response.statusText));\n            }\n\n            const parsedWorkouts = await response.json();\n            this.setState({\n                workouts: parsedWorkouts.data\n            })\n\n        } catch(err) {\n            console.log(err);\n        }\n\n    }\n\n\n    weatherSearch = async (e, zipCode) => {\n        e.preventDefault();\n        console.log(zipCode);\n        \n        try{\n            const response = await fetch('https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/geocode/json?address=\"80223\"&key=AIzaSyDVPLLlJAQ679Frd0gu11khJ9mW02wsvWQ');\n            if(response.status !== 200){\n                throw(Error(response.statusText));\n            }\n\n            const parsedResponse = await response.json();\n            console.log(parsedResponse, \"<-- parsed response zip data\")\n\n            this.setState({\n                lat: parsedResponse.results.geometry.location.lat,\n                long: parsedResponse.results.geometry.location.lng\n            })\n\n        } catch(err){\n            console.log(err);\n        }\n\n        \n        this.getWeather(); \n    }\n\n    getWeather = async () => {\n\n        try {\n            const response = await fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/8a94adc7152ba66046780b53e6b95709/39.7392,-104.9903`);\n\n            if(response.status !== 200){\n                throw(Error(response.statusText));\n            }\n\n            const parsedWeather = await response.json();\n            console.log(parsedWeather, \"<-- parsedWeather\");\n            this.setState({\n                weather: {\n                    temp: parsedWeather.currently.temperature,\n                    currentSummary: parsedWeather.currently.summary,\n                    dailyOutlook: parsedWeather.daily.summary\n                }\n            })\n\n        } catch(err) {\n            console.log(err);\n        }\n\n    }\n\n    createWorkout = async (formData, e) => {\n        e.preventDefault();\n        try {\n            const createdWorkout = await fetch('http://localhost:9000/workouts', {\n                method: 'POST',\n                body: JSON.stringify(formData),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            const parsedResponse = await createdWorkout.json();\n            this.setState({workouts: [...this.state.workouts, parsedResponse.data]})\n\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    deleteWorkout = async (deletedWorkoutID) => {\n        console.log(deletedWorkoutID, 'hit delete function');\n        try{\n            const deleteWorkout = await fetch(`http://localhost:9000/workouts/${deletedWorkoutID}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            const parsedResponse = await deleteWorkout.json();\n            console.log(parsedResponse, 'parsed response');\n            console.log(deletedWorkoutID, \"deletedWorkoutID from before\")\n            if(parsedResponse.status === 200){\n                this.setState({\n                    workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n                })\n            }\n\n\n        } catch(err) {\n            console.log(err);\n        }\n\n    };\n\n    handleFormChange = (e) => {\n        this.setState({\n            workoutToEdit: {\n                ...this.state.workoutToEdit, \n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    modalShows = (thisOne) => {\n        this.setState({\n            workoutToEdit: thisOne\n        })\n    }\n\n    editWorkout = async (e) => {\n        e.preventDefault();\n        console.log(this.state.workoutToEdit._id)\n        try {\n            const updateWorkout = await fetch('http://localhost:9000/workouts/' + this.state.workoutToEdit._id, {\n                method: 'PUT',\n                body: JSON.stringify(this.state.workoutToEdit),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            const parsedResponse = await updateWorkout.json();\n            const editedWorkoutArr = this.state.workouts.map((workout) => {\n                if(workout._id === this.state.workoutToEdit._id){\n                    workout = parsedResponse.data\n                }\n                return workout\n            });\n\n            this.setState({\n                workouts: editedWorkoutArr,\n            });\n\n        } catch(err) {\n            console.log(err)\n        }        \n    }\n\n    render(){\n\n        return(\n            <div className=\"workout-container flex-container\">\n                <WeatherForecast weatherData={this.state.weather} weatherSearch={this.weatherSearch}/>\n                <WorkoutList modalShows={this.modalShows} editWorkout={this.editWorkout} workouts={this.state.workouts} createWorkout={this.createWorkout} deleteWorkout={this.deleteWorkout} handleFormChange={this.handleFormChange}/> \n            </div>\n            \n        )\n        \n    }\n}\n\n\nexport default WorkoutContainer;"]},"metadata":{},"sourceType":"module"}