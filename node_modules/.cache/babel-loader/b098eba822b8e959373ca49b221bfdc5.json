{"ast":null,"code":"import _objectSpread from \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/WorkoutContainer/WorkoutContainer.jsx\";\nimport React, { Component } from 'react';\nimport WorkoutList from './WorkoutList/WorkoutList';\n\nclass WorkoutContainer extends Component {\n  constructor() {\n    super();\n\n    this.getWorkouts = async () => {\n      console.log(\"workouts function hit\");\n\n      try {\n        const response = await fetch('http://localhost:9000/workouts');\n\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n\n        const parsedWorkouts = await response.json();\n        this.setState({\n          workouts: parsedWorkouts.data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.createWorkout = async (formData, e) => {\n      e.preventDefault();\n\n      try {\n        const createdWorkout = await fetch('http://localhost:9000/workouts', {\n          method: 'POST',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await createdWorkout.json();\n        this.setState({\n          workouts: [...this.state.workouts, parsedResponse.data]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.deleteWorkout = async deletedWorkoutID => {\n      console.log(deletedWorkoutID, 'hit delete function');\n\n      try {\n        const deleteWorkout = await fetch(\"http://localhost:9000/workouts/\".concat(deletedWorkoutID), {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await deleteWorkoutID.json();\n        console.log(parsedResponse, 'parsed response');\n        console.log(deletedWorkoutID, \"deletedWorkoutID from before\");\n\n        if (parsedResponse.status === 200) {\n          this.setState({\n            workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleFormChange = e => {\n      this.setState({\n        workoutToEdit: _objectSpread({}, this.state.workoutToEdit, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.modalShows = thisOne => {\n      this.setState({\n        workoutToEdit: thisOne\n      });\n    };\n\n    this.editWorkout = async e => {\n      e.preventDefault();\n      console.log(this.state.workoutToEdit._id);\n\n      try {\n        const updateWorkout = await fetch('http://localhost:9000/workouts/' + this.state.workoutToEdit._id, {\n          method: 'PUT',\n          body: JSON.stringify(this.state.workoutToEdit),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const parsedResponse = await updateWorkout.json();\n        const editedWorkoutArr = this.state.workouts.map(workout => {\n          if (workout._id === this.state.workoutToEdit._id) {\n            workout = parsedResponse.data;\n          }\n\n          return workout;\n        });\n        this.setState({\n          workouts: editedWorkoutArr\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      workouts: [],\n      workoutToEdit: {\n        _id: null,\n        name: '',\n        intervalOne: 0,\n        intervalTwo: 0,\n        cycles: 0\n      },\n      modalShowing: false\n    };\n  }\n\n  componentDidMount() {\n    this.getWorkouts();\n  }\n\n  render() {\n    console.log(this.state.workoutToEdit._id, \"this.state.workoutToEdit._id\");\n    return React.createElement(\"div\", {\n      class: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(WorkoutList, {\n      modalShows: this.modalShows,\n      deleteWorkout: this.deleteWorkout,\n      editWorkout: this.editWorkout,\n      workouts: this.state.workouts,\n      createWorkout: this.createWorkout,\n      deleteWorkout: this.deleteWorkout,\n      handleFormChange: this.handleFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WorkoutContainer;","map":{"version":3,"sources":["/Users/adamwolfman/sei-june-bugs/projects/react_project/inHIIT/front-end/src/WorkoutContainer/WorkoutContainer.jsx"],"names":["React","Component","WorkoutList","WorkoutContainer","constructor","getWorkouts","console","log","response","fetch","status","Error","statusText","parsedWorkouts","json","setState","workouts","data","err","createWorkout","formData","e","preventDefault","createdWorkout","method","body","JSON","stringify","headers","parsedResponse","state","deleteWorkout","deletedWorkoutID","deleteWorkoutID","filter","workout","_id","handleFormChange","workoutToEdit","target","name","value","modalShows","thisOne","editWorkout","updateWorkout","editedWorkoutArr","map","intervalOne","intervalTwo","cycles","modalShowing","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport WorkoutList from './WorkoutList/WorkoutList'\n\nclass WorkoutContainer extends Component {\n    constructor(){\n        super();\n        this.state = {\n            workouts: [],\n            workoutToEdit: {\n                _id: null,\n                name: '',\n                intervalOne: 0,\n                intervalTwo: 0,\n                cycles: 0\n            },\n            modalShowing: false\n        }\n    }\n\n    componentDidMount(){\n        this.getWorkouts();\n    }\n\n    getWorkouts = async () => {\n        console.log(\"workouts function hit\");\n        try {\n            const response = await fetch('http://localhost:9000/workouts');\n\n            if(response.status !== 200){\n                throw(Error(response.statusText));\n            }\n\n            const parsedWorkouts = await response.json();\n            this.setState({\n                workouts: parsedWorkouts.data\n            })\n\n        } catch(err) {\n            console.log(err);\n        }\n\n    }\n\n    createWorkout = async (formData, e) => {\n        e.preventDefault();\n        try {\n            const createdWorkout = await fetch('http://localhost:9000/workouts', {\n                method: 'POST',\n                body: JSON.stringify(formData),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            const parsedResponse = await createdWorkout.json();\n            this.setState({workouts: [...this.state.workouts, parsedResponse.data]})\n\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    deleteWorkout = async (deletedWorkoutID) => {\n        console.log(deletedWorkoutID, 'hit delete function');\n        try{\n            const deleteWorkout = await fetch(`http://localhost:9000/workouts/${deletedWorkoutID}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            const parsedResponse = await deleteWorkoutID.json();\n            console.log(parsedResponse, 'parsed response');\n            console.log(deletedWorkoutID, \"deletedWorkoutID from before\")\n            if(parsedResponse.status === 200){\n                this.setState({\n                    workouts: this.state.workouts.filter(workout => workout._id !== deletedWorkoutID)\n                })\n            }\n\n\n        } catch(err) {\n            console.log(err);\n        }\n\n    };\n\n    handleFormChange = (e) => {\n        this.setState({\n            workoutToEdit: {\n                ...this.state.workoutToEdit, \n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    modalShows = (thisOne) => {\n        this.setState({\n            workoutToEdit: thisOne\n        })\n    }\n\n    editWorkout = async (e) => {\n        e.preventDefault();\n        console.log(this.state.workoutToEdit._id)\n        try {\n            const updateWorkout = await fetch('http://localhost:9000/workouts/' + this.state.workoutToEdit._id, {\n                method: 'PUT',\n                body: JSON.stringify(this.state.workoutToEdit),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            const parsedResponse = await updateWorkout.json();\n            const editedWorkoutArr = this.state.workouts.map((workout) => {\n                if(workout._id === this.state.workoutToEdit._id){\n                    workout = parsedResponse.data\n                }\n                return workout\n            });\n\n            this.setState({\n                workouts: editedWorkoutArr,\n            });\n\n        } catch(err) {\n            console.log(err)\n        }        \n    }\n\n    render(){\n\n        console.log(this.state.workoutToEdit._id, \"this.state.workoutToEdit._id\");\n\n        return(\n            <div class=\"flex-container\">\n                <WorkoutList modalShows={this.modalShows} deleteWorkout={this.deleteWorkout} editWorkout={this.editWorkout} workouts={this.state.workouts} createWorkout={this.createWorkout} deleteWorkout={this.deleteWorkout} handleFormChange={this.handleFormChange}/> \n            </div>\n            \n        )\n        \n    }\n}\n\n\nexport default WorkoutContainer;"]},"metadata":{},"sourceType":"module"}